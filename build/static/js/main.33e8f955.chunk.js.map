{"version":3,"sources":["App.module.scss","components/EditableList/AddInput/AddInput.tsx","components/EditableList/EditInput/EditInput.tsx","components/Confirmation/Confirmation.tsx","utilities/helpers.ts","components/EditableList/ListItem/ListItem.tsx","components/EditableList/EditableList.tsx","common/hocs/listWithRecoilState.tsx","state/atoms/comparison.ts","state/atoms/criteria.ts","utilities/criteriaWeight.ts","state/atoms/combinations.ts","state/atoms/totals.ts","utilities/criteriaUtility.ts","state/atoms/utility.ts","components/Comparison/Comparison.tsx","components/Comparison/ComparisonPanel.tsx","components/Totals/Totals.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Search","Input","Control","styled","div","AddInput","placeholder","onAction","useState","value","setValue","enterButton","PlusOutlined","onSearch","curVal","trim","notification","error","message","success","size","onChange","e","target","Wrapper","section","EditInput","defaultValue","onOK","onCancel","autoFocus","onKeyDown","key","shape","icon","CheckOutlined","onClick","CloseOutlined","modalRoot","document","getElementById","Confirmation","visible","el","createElement","useEffect","appendChild","removeChild","ReactDOM","createPortal","title","onOk","okText","cancelText","callback","setState","positive","ListItem","onDelete","onEdit","text","setVisible","edit","setEdit","editAction","deleteActon","Item","actions","EditOutlined","DeleteOutlined","EditableList","name","items","setItems","concat","orientation","bordered","dataSource","locale","emptyText","renderItem","item","index","info","slice","listWithRecoilState","atom","props","useRecoilState","comparisonAtom","default","criteriaAtom","calculateGeometricMeans","matrix","map","row","Math","pow","reduce","acc","length","calculateWeights","gm","geometricMean","criteriaToWeights","combinationComp","criteria","flow","combs","combination","applyCriteriaValue","combinationValues","Array","forEach","i1","i2","_r","i","generateMatrix","combinationsSelector","selector","get","comparison","_c","criteriaIndex","combinationLength","_s","combinationIndex","generateCombinations","combinationsComparisonDefaultSelector","combinationsComparisonAtom","totalsSelector","combinations","criteriaComp","cr1","cr2","abs","weights","comparatorsUtilityValues","criteriaRightLimit","comparatorUtilityValues","rightLimit","calculateUtility","utility","calculateTotals","criteriaToUtilitySelector","criteriaUtility","marks","0","points","Map","Comparison","min","max","range","8","tipFormatter","find","includes","range1","range2","some","r","ComparisonPanel","useRecoilValue","combinationsComparison","setCombinationsComparison","Totals","data","total","sort","a","b","count","disabled","MAX","className","Content","Layout","Panel","Collapse","ComparisonList","CriteriaList","staticPanels","component","App","styles","defaultActiveKey","_p","header","Boolean","window","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.33e8f955.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1OOFH\"};","import React, { useState } from 'react';\r\nimport { Input, notification } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst { Search } = Input;\r\n\r\nconst Control = styled.div`\r\n  display: flex;\r\n`;\r\n\r\ntype Props = {\r\n  placeholder?: HTMLInputElement['placeholder'];\r\n  onAction: (value: string) => void;\r\n};\r\n\r\nexport const AddInput: React.FunctionComponent<Props> = ({ placeholder = '', onAction }) => {\r\n  const [value, setValue] = useState('');\r\n  return (\r\n    <Control>\r\n      <Search\r\n        placeholder={placeholder}\r\n        enterButton={<PlusOutlined />}\r\n        onSearch={(curVal) => {\r\n          if (curVal.trim() === '') {\r\n            notification.error({\r\n              message: 'Please enter text',\r\n            });\r\n          } else {\r\n            notification.success({\r\n              message: `${curVal} was added to the list`,\r\n            });\r\n            onAction(curVal);\r\n            setValue('');\r\n          }\r\n        }}\r\n        size=\"large\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n    </Control>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n`;\r\n\r\ntype Props = {\r\n  defaultValue?: string;\r\n  onOK: (value: string) => void;\r\n  onCancel: () => void;\r\n};\r\n\r\nexport const EditInput: React.FunctionComponent<Props> = ({ defaultValue = '', onOK, onCancel }) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        autoFocus\r\n        value={value}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n        }}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') {\r\n            onOK(value);\r\n          }\r\n          if (e.key === 'Escape') {\r\n            onCancel();\r\n          }\r\n        }}\r\n      />\r\n      <Button\r\n        shape=\"circle\"\r\n        icon={<CheckOutlined />}\r\n        onClick={() => {\r\n          onOK(value);\r\n        }}\r\n      />\r\n      <Button\r\n        shape=\"circle\"\r\n        icon={<CloseOutlined />}\r\n        onClick={() => {\r\n          onCancel();\r\n        }}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Modal } from 'antd';\r\n\r\ntype ModalProps = React.ComponentProps<typeof Modal>;\r\n\r\ntype Props = {\r\n  visible?: ModalProps['visible'];\r\n  onOK?: ModalProps['onOk'];\r\n  onCancel?: ModalProps['onOk'];\r\n};\r\n\r\nconst modalRoot = document.getElementById('modal-root') as HTMLElement;\r\n\r\nexport const Confirmation = ({ visible, onOK = () => {}, onCancel = () => {} }: Props): React.ReactPortal => {\r\n  const el = document.createElement('div');\r\n  useEffect(() => {\r\n    modalRoot.appendChild(el);\r\n    return () => {\r\n      modalRoot.removeChild(el);\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(\r\n    <Modal title=\"Modal\" visible={visible} onOk={onOK} onCancel={onCancel} okText=\"Confirm\" cancelText=\"Cancel\">\r\n      <p>Do you confirm your action?</p>\r\n    </Modal>,\r\n    el\r\n  );\r\n};\r\n","export const onAction = <T>(callback: (value: T) => void, setState: (value: boolean) => void) => (\r\n  positive: boolean = false\r\n) => (value?: T) => {\r\n  setState(false);\r\n  positive && callback(value!);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { List, Button } from 'antd';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { EditInput } from '../EditInput';\r\nimport { Confirmation } from '../../Confirmation';\r\nimport { onAction } from '../../../utilities/helpers';\r\n\r\ntype Props = {\r\n  onDelete: () => void;\r\n  onEdit: (value: string) => void;\r\n  text: string;\r\n};\r\n\r\nexport const ListItem: React.FunctionComponent<Props> = ({ onDelete, onEdit, text }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const editAction = onAction(onEdit, setEdit);\r\n  const deleteActon = onAction(onDelete, setVisible);\r\n  return (\r\n    <List.Item\r\n      actions={[\r\n        <Button\r\n          shape=\"circle\"\r\n          onClick={() => {\r\n            setEdit(true);\r\n          }}\r\n          icon={<EditOutlined />}\r\n        />,\r\n        <Button\r\n          shape=\"circle\"\r\n          icon={<DeleteOutlined />}\r\n          onClick={() => {\r\n            setVisible(true);\r\n          }}\r\n        />,\r\n      ]}\r\n    >\r\n      <div>\r\n        {edit ? <EditInput defaultValue={text} onOK={editAction(true)} onCancel={editAction()} /> : text}\r\n        <Confirmation visible={visible} onOK={deleteActon(true)} onCancel={deleteActon()} />\r\n      </div>\r\n    </List.Item>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { List, Divider, Card, notification } from 'antd';\r\nimport { AddInput } from './AddInput';\r\nimport { ListItem } from './ListItem';\r\n\r\ntype Props = {\r\n  placeholder?: string;\r\n  name: string;\r\n  items: string[];\r\n  setItems: (items: string[]) => void;\r\n};\r\n\r\nexport const EditableList: React.FunctionComponent<Props> = ({ placeholder = '', name, items, setItems }) => (\r\n  <Card>\r\n    <AddInput\r\n      placeholder={placeholder}\r\n      onAction={(value) => {\r\n        setItems(items.concat(value));\r\n      }}\r\n    />\r\n    <Divider orientation=\"left\">{name} list</Divider>\r\n    <List\r\n      size=\"large\"\r\n      bordered\r\n      dataSource={items}\r\n      locale={{ emptyText: <div>No data</div> }}\r\n      renderItem={(item, index) => (\r\n        <ListItem\r\n          text={item}\r\n          onDelete={() => {\r\n            notification.info({\r\n              message: `${items[index]} was removed from the list`,\r\n            });\r\n            setItems([...items.slice(0, index), ...items.slice(index + 1)]);\r\n          }}\r\n          onEdit={(value) => {\r\n            notification.info({\r\n              message: `${items[index]} was renamed to ${value}`,\r\n            });\r\n            setItems([...items.slice(0, index), value, ...items.slice(index + 1)]);\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  </Card>\r\n);\r\n","import React from 'react';\r\nimport { useRecoilState, RecoilState } from 'recoil';\r\nimport { EditableList } from '../../components/EditableList';\r\n\r\ntype Props = Omit<React.ComponentProps<typeof EditableList>, 'items' | 'setItems'>;\r\n\r\nexport const listWithRecoilState = (atom: RecoilState<string[]>): React.FunctionComponent<Props> => (props) => {\r\n  const [items, setItems] = useRecoilState(atom);\r\n  return <EditableList items={items} setItems={setItems} {...props} />;\r\n};\r\n","import { atom } from 'recoil';\r\n\r\nexport const comparisonAtom = atom<string[]>({\r\n  key: 'comparison/list',\r\n  default: [],\r\n});\r\n","import { atom } from 'recoil';\r\n\r\nexport const criteriaAtom = atom<string[]>({\r\n  key: 'criteria/list',\r\n  default: [],\r\n});\r\n","import { flow } from 'fp-ts/function';\r\n\r\ntype combinationsT = Array<Array<number>>;\r\ntype matrixT = Array<Array<number>>;\r\ntype geometricMeans = number[];\r\n\r\nexport const generateCombinations = (criteria: string[]) =>\r\n  criteria.reduce((acc: combinationsT, _c, criteriaIndex) => {\r\n    // -1 because the current index should be excluded\r\n    const combinationLength = criteria.length - 1 - criteriaIndex;\r\n    return combinationLength < 1\r\n      ? acc\r\n      : acc.concat(\r\n          [...new Array(combinationLength)].map((_s, combinationIndex) => [\r\n            criteriaIndex,\r\n            // +1 because it should start from the next index after the current\r\n            criteriaIndex + 1 + combinationIndex,\r\n          ])\r\n        );\r\n  }, []);\r\n\r\nconst applyCriteriaValue = (combinationComp: number[]) => (combs: combinationsT): combinationsT =>\r\n  combs.map((combination, index) => [...combination, combinationComp[index]]);\r\n\r\nconst generateMatrix = (criteria: string[]) => (combinationValues: combinationsT): matrixT => {\r\n  const matrix = [...new Array(criteria.length)].map(() => [...new Array(criteria.length)]);\r\n  combinationValues.forEach(([i1, i2, value]) => {\r\n    matrix[i1][i2] = value;\r\n    matrix[i2][i1] = 1 / value;\r\n  });\r\n  matrix.forEach((_r, i) => {\r\n    matrix[i][i] = 1;\r\n  });\r\n  return matrix;\r\n};\r\n\r\nconst calculateGeometricMeans = (matrix: matrixT): geometricMeans =>\r\n  matrix.map((row) =>\r\n    Math.pow(\r\n      row.reduce((acc, value) => acc * value, 1),\r\n      1 / matrix.length\r\n    )\r\n  );\r\n\r\nconst calculateWeights = (gm: geometricMeans) =>\r\n  gm.map((geometricMean) => geometricMean / gm.reduce((acc, gm) => acc + gm, 0));\r\n\r\nexport const criteriaToWeights = (combinationComp: number[], criteria: string[]) =>\r\n  flow(applyCriteriaValue(combinationComp), generateMatrix(criteria), calculateGeometricMeans, calculateWeights);\r\n","import { selector, atom } from 'recoil';\r\nimport { criteriaAtom, comparisonAtom } from './';\r\nimport { generateCombinations } from '../../utilities';\r\n\r\nexport const combinationsSelector = selector({\r\n  key: 'combinations/list',\r\n  get: ({ get }) => {\r\n    const comparison = get(comparisonAtom);\r\n    const criteria = get(criteriaAtom);\r\n\r\n    return comparison.length < 2 && criteria.length < 2 ? [] : generateCombinations(criteria);\r\n  },\r\n});\r\n\r\nconst combinationsComparisonDefaultSelector = selector({\r\n  key: 'combinations/comparisonDefault',\r\n  get: ({ get }) => get(combinationsSelector).map(() => [0, 0]) as Array<[number, number]>,\r\n});\r\n\r\nexport const combinationsComparisonAtom = atom<Array<[number, number]>>({\r\n  key: 'combinations/comparison',\r\n  default: combinationsComparisonDefaultSelector,\r\n});\r\n","import { selector } from 'recoil';\r\nimport { combinationsComparisonAtom, combinationsSelector, criteriaAtom } from './';\r\nimport { criteriaToWeights, calculateTotals } from '../../utilities';\r\n\r\nexport const totalsSelector = selector({\r\n  key: 'totals/list',\r\n  get: ({ get }) => {\r\n    const combinations = get(combinationsSelector);\r\n    const criteria = get(criteriaAtom);\r\n    if (combinations.length === 0) {\r\n      return [];\r\n    }\r\n    const criteriaComp = get(combinationsComparisonAtom).map(([cr1, cr2]) => (Math.abs(cr1) + 1) / (Math.abs(cr2) + 1));\r\n    const weights = criteriaToWeights(criteriaComp, criteria)(combinations);\r\n    const criteriaRightLimit = [20000, 200, 300];\r\n    const comparatorsUtilityValues = [\r\n      [10000, 60, 30],\r\n      [8000, 50, 150],\r\n      [15000, 5, 50],\r\n    ];\r\n    return calculateTotals(comparatorsUtilityValues, criteriaRightLimit)(weights);\r\n  },\r\n});\r\n","export const calculateUtility = (value: number, rightLimit: number) =>\r\n  value > rightLimit ? 0 : (-100 * value) / rightLimit + 100;\r\n\r\nexport const calculateTotals = (comparatorsUtilityValues: Array<Array<number>>, criteriaRightLimit: number[]) => (\r\n  weights: number[]\r\n) =>\r\n  comparatorsUtilityValues.map((comparatorUtilityValues) =>\r\n    comparatorUtilityValues\r\n      .map((value, i) => calculateUtility(value, criteriaRightLimit[i]))\r\n      .reduce((acc, utility, index) => acc + utility * weights[index], 0)\r\n  );\r\n","import { atom, selector } from 'recoil';\r\nimport { criteriaAtom, comparisonAtom } from './';\r\n\r\ntype utility = {\r\n  comparison: string;\r\n  criteriaUtility: Array<{\r\n    criteria: string;\r\n    value: number;\r\n  }>;\r\n};\r\n\r\nconst criteriaToUtilitySelector = selector({\r\n  key: 'utility/listDefault',\r\n  get: ({ get }) =>\r\n    get(comparisonAtom).map((comparison) =>\r\n      get(criteriaAtom).reduce(\r\n        (acc: utility, criteria) => ({\r\n          ...acc,\r\n          criteriaUtility: acc.criteriaUtility.concat({\r\n            criteria,\r\n            value: 0,\r\n          }),\r\n        }),\r\n        {\r\n          comparison,\r\n          criteriaUtility: [],\r\n        }\r\n      )\r\n    ),\r\n});\r\n\r\nexport const utilityAtom = atom<Array<utility>>({\r\n  key: 'utility/list',\r\n  default: criteriaToUtilitySelector,\r\n});\r\n","import React from 'react';\r\nimport { Slider } from 'antd';\r\n\r\ntype Props = {\r\n  value: [number, number];\r\n  onChange: (value: [number, number]) => void;\r\n  criteria: [string, string];\r\n};\r\n\r\nconst marks = {\r\n  0: 'Same',\r\n};\r\n\r\nconst points = new Map([\r\n  [[0], 'Same'],\r\n  [[1, 2, 3], 'Slightly'],\r\n  [[4, 5], 'More'],\r\n  [[6, 7], 'Much more'],\r\n  [[8], 'Significantly'],\r\n]);\r\n\r\nexport const Comparison: React.FunctionComponent<Props> = ({ value, onChange, criteria }) => (\r\n  <Slider\r\n    min={-8}\r\n    max={8}\r\n    range\r\n    marks={{\r\n      ...marks,\r\n      '-8': criteria[0],\r\n      8: criteria[1],\r\n    }}\r\n    tipFormatter={(value) => [...points].find(([range]) => range.includes(Math.abs(value!)))![1]}\r\n    value={value}\r\n    onChange={([range1, range2]) => {\r\n      if ([range1, range2].some((r) => r < 0)) {\r\n        onChange([range1, 0]);\r\n      } else {\r\n        onChange([0, range2]);\r\n      }\r\n    }}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport { criteriaAtom, combinationsSelector, combinationsComparisonAtom } from '../../state/atoms';\r\nimport { Comparison } from './Comparison';\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 0 50px;\r\n`;\r\n\r\nexport const ComparisonPanel = () => {\r\n  const criteria = useRecoilValue(criteriaAtom);\r\n  const combinations = useRecoilValue(combinationsSelector);\r\n  const [combinationsComparison, setCombinationsComparison] = useRecoilState(combinationsComparisonAtom);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {combinations.map(([cr1, cr2], index) => (\r\n        <Comparison\r\n          key={index}\r\n          value={combinationsComparison[index]}\r\n          onChange={(value) => {\r\n            setCombinationsComparison([\r\n              ...combinationsComparison.slice(0, index),\r\n              value,\r\n              ...combinationsComparison.slice(index + 1),\r\n            ]);\r\n          }}\r\n          criteria={[criteria[cr1], criteria[cr2]]}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Rate, Card } from 'antd';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { totalsSelector, comparisonAtom } from '../../state/atoms';\r\n\r\nconst MAX = 100;\r\nconst stars = 10;\r\nconst divider = MAX / stars;\r\n\r\nexport const Totals = () => {\r\n  const comparison = useRecoilValue(comparisonAtom);\r\n  const totals = useRecoilValue(totalsSelector);\r\n  const data = totals\r\n    .map((total, index) => ({\r\n      total,\r\n      comparison: comparison[index],\r\n    }))\r\n    .sort((a, b) => b.total - a.total);\r\n  return (\r\n    <Card title=\"Results\">\r\n      {data.map(({ total, comparison }) => (\r\n        <div>\r\n          <Rate count={stars} disabled value={total / divider} />\r\n          <span className=\"ant-rate-text\">\r\n            <strong>{comparison}</strong> ({total})\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Layout, Collapse } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport { listWithRecoilState } from './common/hocs/listWithRecoilState';\nimport { ComparisonPanel } from './components/Comparison';\nimport { Totals } from './components/Totals';\nimport { comparisonAtom, criteriaAtom } from './state/atoms';\n\nimport styles from './App.module.scss';\n\nconst { Content } = Layout;\nconst { Panel } = Collapse;\n\nconst ComparisonList = listWithRecoilState(comparisonAtom);\nconst CriteriaList = listWithRecoilState(criteriaAtom);\nconst staticPanels = [\n  { name: 'Comparison', component: <ComparisonList placeholder=\"Enter a thing to compare\" name=\"Comparison\" /> },\n  { name: 'Criteria', component: <CriteriaList placeholder=\"Enter a criteria to compare\" name=\"Criteria\" /> },\n  { name: 'Criteria comparison', component: <ComparisonPanel /> },\n];\n\nfunction App() {\n  return (\n    <Layout>\n      <Content className={styles.App}>\n        <Collapse defaultActiveKey={staticPanels.map((_p, index) => index)}>\n          {staticPanels.map(({ name, component }, index) => (\n            <Panel header={name} key={index}>\n              {component}\n            </Panel>\n          ))}\n        </Collapse>\n        <Totals />\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}